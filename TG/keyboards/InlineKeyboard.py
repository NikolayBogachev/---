from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


def get_habit_choice_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –ø—Ä–∏–≤—ã—á–∫—É",
                              callback_data="useful")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤—Ä–µ–¥–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏",
                              callback_data="harmful")],
        [InlineKeyboardButton(text="üîç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–µ–∫",
                              callback_data="track")],
        [InlineKeyboardButton(text="‚öôÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫–∏",
                              callback_data="update_habits")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def completion_marks_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="‚úÖ –Ø –≤—ã–ø–æ–ª–Ω–∏–ª!",
                              callback_data="completed")],
        [InlineKeyboardButton(text="‚ùå –Ø –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª!",
                              callback_data="not_fulfill")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]

    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def track_habit_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="‚ûï –ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É",
                              callback_data="begin")],
        [InlineKeyboardButton(text="‚ùå –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–∏–≤—ã—á–∫—É",
                              callback_data="cease")],
        [InlineKeyboardButton(text="üîÑ  –ù–∞–∑–∞–¥", callback_data="back")]

    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def create_track_habits_inline_keyboard(habits: dict, is_tracked: bool) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–∏–≤—ã—á–∫–∞–º–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ —Ñ–ª–∞–≥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.

    :param habits: –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä–µ–π.
    :param is_tracked: –§–ª–∞–≥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–µ–∫. True –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫, False –¥–ª—è –Ω–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö.
    :return: –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """
    if not habits:
        habits = []
    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ —Ñ–ª–∞–≥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    filtered_habits = [habit for habit in habits if habit.get("is_tracked") == is_tracked]

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons = []

    if filtered_habits:
        # –î–ª—è –∫–∞–∂–¥–æ–π –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
        for habit in filtered_habits:
            habit_name = habit["name"]
            habit_id = habit["id"]
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –µ—ë –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –∫–∞–∫ callback_data
            button = InlineKeyboardButton(text=habit_name, callback_data=f"habit_{habit_id}")
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
            buttons.append([button])  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä—è–¥
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫ —Å –Ω—É–∂–Ω—ã–º —Ñ–ª–∞–≥–æ–º, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        no_habits_button = InlineKeyboardButton(
            text="–ù–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫ —Å —ç—Ç–∏–º —Å—Ç–∞—Ç—É—Å–æ–º",
            callback_data="no_habits"
        )
        buttons.append([no_habits_button])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "üîÑ –ù–∞–∑–∞–¥" –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥
    back_button = InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")
    buttons.append([back_button])

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    return keyboard


def update_habits_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="‚úèÔ∏è  –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É", callback_data="change")],
        [InlineKeyboardButton(text="‚ùå  –£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É", callback_data="delete")],
        [InlineKeyboardButton(text="üîÑ  –ù–∞–∑–∞–¥", callback_data="back")]

    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def create_change_fields_keyboard(habit_id: int) -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"change_name_{habit_id}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"change_description_{habit_id}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª–µ–≤—ã–µ –¥–Ω–∏", callback_data=f"change_target_days_{habit_id}")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞", callback_data=f"change_start_date_{habit_id}")],
        [InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def useful_habit_choice_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="üí™ –ó–¥–æ—Ä–æ–≤—å–µ", callback_data="health")],
        [InlineKeyboardButton(text="üèÉ –°–ø–æ—Ä—Ç", callback_data="sport")],
        [InlineKeyboardButton(text="üçè –ü–∏—Ç–∞–Ω–∏–µ", callback_data="nutrition")],
        [InlineKeyboardButton(text="‚úçÔ∏è –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="option")],
        [InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


def health_habit_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="üò¥ –°–æ–Ω", callback_data="sleep")],
        [InlineKeyboardButton(text="üíß –ì–∏–¥—Ä–∞—Ç–∞—Ü–∏—è", callback_data="hydration")],
        [InlineKeyboardButton(text="üßò‚Äç‚ôÄÔ∏è –ú–µ–¥–∏—Ç–∞—Ü–∏—è", callback_data="meditation")],
        [InlineKeyboardButton(text="‚úçÔ∏è –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="option")],
        [InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def sport_habit_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="üèãÔ∏è‚Äç‚ôÇÔ∏è –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", callback_data="strength_training")],
        [InlineKeyboardButton(text="üèÉ –ë–µ–≥", callback_data="running")],
        [InlineKeyboardButton(text="üèä –ü–ª–∞–≤–∞–Ω–∏–µ", callback_data="swimming")],
        [InlineKeyboardButton(text="‚úçÔ∏è –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="option")],
        [InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def nutrition_habit_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="ü•ó –û–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã", callback_data="fruits_veggies")],
        [InlineKeyboardButton(text="üç≥ –ó–∞–≤—Ç—Ä–∞–∫", callback_data="breakfast")],
        [InlineKeyboardButton(text="ü•§ –°–Ω–∏–∂–µ–Ω–∏–µ —Å–∞—Ö–∞—Ä–∞", callback_data="less_sugar")],
        [InlineKeyboardButton(text="‚úçÔ∏è –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="option")],
        [InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)
    return keyboard


def harmful_habit_choice_keyboard() -> InlineKeyboardMarkup:
    kb = [
        [InlineKeyboardButton(text="üö¨ –ö—É—Ä–µ–Ω–∏–µ", callback_data="smoking")],
        [InlineKeyboardButton(text="üç∫ –ê–ª–∫–æ–≥–æ–ª—å", callback_data="alcohol")],
        [InlineKeyboardButton(text="‚úçÔ∏è –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="option")],
        [InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–≤—ã—á–µ–∫
def create_habits_inline_keyboard(habits: dict) -> InlineKeyboardMarkup:
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons = []

    if habits:
        # –î–ª—è –∫–∞–∂–¥–æ–π –ø—Ä–∏–≤—ã—á–∫–∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
        for habit in habits:
            habit_name = habit["name"]
            habit_id = habit["id"]
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –µ—ë –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –∫–∞–∫ callback_data
            button = InlineKeyboardButton(text=habit_name, callback_data=f"habit_{habit_id}")
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
            buttons.append([button])  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä—è–¥

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "üîÑ –ù–∞–∑–∞–¥"
        back_button = InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")
        buttons.append([back_button])  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥

    else:
        # –ï—Å–ª–∏ –ø—Ä–∏–≤—ã—á–µ–∫ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –ø—Ä–∏–≤—ã—á–µ–∫ –ø–æ–∫–∞ –Ω–µ—Ç
        no_habits_button = InlineKeyboardButton(text="–ü—Ä–∏–≤—ã—á–µ–∫ –ø–æ–∫–∞ –Ω–µ—Ç", callback_data="no_habits")
        buttons.append([no_habits_button])
        # –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "üîÑ –ù–∞–∑–∞–¥" –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø—Ä–∏–≤—ã—á–µ–∫
        back_button = InlineKeyboardButton(text="üîÑ –ù–∞–∑–∞–¥", callback_data="back")
        buttons.append([back_button])  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä—è–¥

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    return keyboard

